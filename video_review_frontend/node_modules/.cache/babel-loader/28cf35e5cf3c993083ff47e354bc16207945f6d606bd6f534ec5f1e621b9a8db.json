{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentList = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  useEffect(() => {\n    axios.get(\"/comments/demo-video\", {\n      withCredentials: false\n    }).then(res => {\n      setComments(res.data);\n    }).catch(err => {\n      console.error(\"Failed to load comments:\", err);\n    });\n  }, []);\n  const startEditing = comment => {\n    if (!comment || typeof comment.id !== \"number\") {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", comment.id);\n    setEditingId(comment.id);\n    setEditedTextMap(prev => ({\n      ...prev,\n      [comment.id]: comment.comment\n    }));\n  };\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n  const handleTextChange = (id, value) => {\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const saveEdit = async id => {\n    const updatedText = editedTextMap[id];\n    if (typeof id !== \"number\" || typeof updatedText !== \"string\") {\n      console.warn(\"Invalid save request:\", {\n        id,\n        updatedText\n      });\n      return;\n    }\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      await axios.put(`/comments/${id}`, {\n        comment: updatedText\n      });\n      const res = await axios.get(\"/comments/demo-video\", {\n        withCredentials: false\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      setComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(c => {\n        if (typeof c.id !== \"number\") return null; // skip invalid\n        const commentId = c.id;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [c.timestamp, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), \" \", editingId === commentId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedTextMap[commentId] || \"\",\n              onChange: e => handleTextChange(commentId, e.target.value),\n              rows: 2,\n              cols: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => saveEdit(commentId),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [c.comment, \" (\", c.user, \")\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEditing(c),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"EIhBCA/ks5RNStJcPKa8XBkucF0=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CommentList","_s","comments","setComments","editingId","setEditingId","editedTextMap","setEditedTextMap","get","withCredentials","then","res","data","catch","err","console","error","startEditing","comment","id","warn","log","prev","cancelEditing","handleTextChange","value","saveEdit","updatedText","put","children","fileName","_jsxFileName","lineNumber","columnNumber","map","c","commentId","timestamp","onChange","e","target","rows","cols","onClick","user","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CommentList = () => {\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n\n  useEffect(() => {\n    axios.get(\"/comments/demo-video\", {\n      withCredentials: false\n    })\n    .then((res) => {\n      setComments(res.data);\n    })\n    .catch((err) => {\n      console.error(\"Failed to load comments:\", err);\n    });\n  }, []);\n\n  const startEditing = (comment) => {\n    if (!comment || typeof comment.id !== \"number\") {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", comment.id);\n    setEditingId(comment.id);\n    setEditedTextMap((prev) => ({ ...prev, [comment.id]: comment.comment }));\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n\n  const handleTextChange = (id, value) => {\n    setEditedTextMap((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const saveEdit = async (id) => {\n    const updatedText = editedTextMap[id];\n    if (typeof id !== \"number\" || typeof updatedText !== \"string\") {\n      console.warn(\"Invalid save request:\", { id, updatedText });\n      return;\n    }\n\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      await axios.put(`/comments/${id}`, { comment: updatedText });\n      const res = await axios.get(\"/comments/demo-video\", {\n        withCredentials: false\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      setComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Comments</h4>\n      <ul>\n        {comments.map((c) => {\n          if (typeof c.id !== \"number\") return null; // skip invalid\n          const commentId = c.id;\n          return (\n            <li key={commentId}>\n              <strong>{c.timestamp}:</strong>{\" \"}\n              {editingId === commentId ? (\n                <div>\n                  <textarea\n                    value={editedTextMap[commentId] || \"\"}\n                    onChange={(e) => handleTextChange(commentId, e.target.value)}\n                    rows={2}\n                    cols={50}\n                  />\n                  <br />\n                  <button onClick={() => saveEdit(commentId)}>Save</button>\n                  <button onClick={cancelEditing}>Cancel</button>\n                </div>\n              ) : (\n                <div>\n                  {c.comment} ({c.user}){\" \"}\n                  <button onClick={() => startEditing(c)}>Edit</button>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default CommentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}