{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TEAM_EMAILS = [\"matthew@naveonguides.com\", \"paul@naveonguides.com\", \"ryan@naveonguides.com\", \"mark@naveonguides.com\"];\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\nconst CommentList = ({\n  videoId,\n  currentTime\n}) => {\n  _s();\n  // Highlight and scroll to active comment during video playback\n  const commentRefs = useRef({});\n  const [activeCommentId, setActiveCommentId] = useState(null);\n  const [comments, setComments] = useState([]);\n  // Find and track the active comment based on currentTime\n  useEffect(() => {\n    if (!Array.isArray(comments)) return;\n    const match = comments.find(c => Math.abs(Number(c.timestamp) - currentTime) <= 1);\n    if ((match === null || match === void 0 ? void 0 : match.id) !== activeCommentId) {\n      setActiveCommentId((match === null || match === void 0 ? void 0 : match.id) || null);\n    }\n  }, [currentTime, comments]);\n\n  // Scroll to the active comment when it changes\n  useEffect(() => {\n    const activeRef = commentRefs.current[activeCommentId];\n    if (activeRef !== null && activeRef !== void 0 && activeRef.current) {\n      activeRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  }, [activeCommentId]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = commentsArr => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(c => c.page != null && c.page !== 0 && c.page !== \"0\");\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(`${BACKEND_URL}/comments/${id}/reactions`, {\n        [type]: 1\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n          withCredentials: false,\n          headers: {\n            Authorization: token\n          }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n    const listener = e => {\n      fetchComments().then(res => {\n        var _e$detail;\n        sortAndSetComments([...res]);\n        if (e !== null && e !== void 0 && (_e$detail = e.detail) !== null && _e$detail !== void 0 && _e$detail.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n    fetchComments().then(res => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: commentCount => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n  const startEditing = comment => {\n    var _comment$id;\n    const id = (_comment$id = comment.id) !== null && _comment$id !== void 0 ? _comment$id : `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: comment.comment\n    }));\n  };\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n  const handleTextChange = (id, value) => {\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, {\n        comment: updatedText\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n  const deleteComment = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n  if (!videoId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Please upload a video to begin reviewing.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      maxHeight: \"600px\",\n      overflowY: \"auto\",\n      background: \"#f9f9f9\",\n      padding: \"1rem\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n      boxSizing: \"border-box\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: \"1rem\",\n        fontSize: \"1.5rem\",\n        fontWeight: \"600\",\n        color: \"#333\"\n      },\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), isPolling && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\",\n        color: \"#f9a825\",\n        fontWeight: 500\n      },\n      children: \"\\uD83D\\uDFE1 Live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0,\n        margin: 0\n      },\n      children: comments.map(c => {\n        if (!c || !c.timestamp || !c.comment || typeof c.id !== \"number\") return null;\n        const commentId = c.id;\n        const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n        // Highlight and ref logic\n        if (!commentRefs.current[c.id]) {\n          commentRefs.current[c.id] = /*#__PURE__*/React.createRef();\n        }\n        const commentRef = commentRefs.current[c.id];\n        const isActive = c.id === activeCommentId;\n        console.log(\"Parsed reactions:\", reactions);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: commentRef,\n          style: {\n            background: isActive ? \"#e3f2fd\" : \"#fff\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"6px\",\n            padding: \"0.75rem\",\n            marginBottom: \"0.75rem\",\n            width: \"100%\",\n            boxSizing: \"border-box\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              display: \"block\",\n              color: \"#555\",\n              marginBottom: \"0.25rem\"\n            },\n            children: c.page && parseInt(c.page) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"\\uD83D\\uDCC4 Page \", c.page]\n            }, void 0, true) : (() => {\n              const minutes = Math.floor(c.timestamp / 60);\n              const seconds = Math.floor(c.timestamp % 60).toString().padStart(2, '0');\n              return `${minutes}:${seconds}`;\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), editingId === commentId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedTextMap[commentId] || \"\",\n              onChange: e => handleTextChange(commentId, e.target.value),\n              rows: 2,\n              cols: 50,\n              style: {\n                width: \"100%\",\n                borderRadius: \"4px\",\n                border: \"1px solid #ccc\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"0.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: () => saveEdit(commentId),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: cancelButtonStyle,\n                onClick: cancelEditing,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"#333\",\n                  whiteSpace: \"pre-wrap\",\n                  marginBottom: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: \"0.25rem\"\n                  },\n                  children: [c.comment.split(\"\\n\\n--\")[0], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#888\"\n                    },\n                    children: [\"(\", c.user, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this), c.comment.includes(\"\\n\\n--\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: \"0.9rem\",\n                    color: \"#444\"\n                  },\n                  children: c.comment.split(\"\\n\\n--\").slice(1).map((part, i) => {\n                    const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: \"0.5rem\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: \"0.95rem\"\n                        },\n                        children: [textParts.join(\"\\n\"), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"#666\"\n                          },\n                          children: [\"(\", metaLine, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 62\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 37\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 35\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 27\n                }, this), c.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: \"0.5rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: c.image,\n                    alt: \"Annotation\",\n                    style: {\n                      maxWidth: \"100%\",\n                      maxHeight: \"200px\",\n                      border: \"1px solid #ccc\",\n                      borderRadius: \"4px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  gap: \"0.5rem\",\n                  marginTop: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    ...buttonStyle,\n                    backgroundColor: \"#4caf50\"\n                  },\n                  onClick: () => {\n                    setAddToId(commentId);\n                    setAdditionalText(\"\");\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: buttonStyle,\n                  onClick: () => startEditing(c),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: deleteButtonStyle,\n                  onClick: () => deleteComment(c.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    ...buttonStyle,\n                    backgroundColor: \"#ff9800\"\n                  },\n                  onClick: () => {\n                    setNotifyTargetComment(c);\n                    setNotifyEmailInput(\"\");\n                    setIsNotifyModalOpen(true);\n                  },\n                  children: \"@Notify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: \"0.25rem\",\n                    fontSize: \"1.2rem\"\n                  },\n                  children: [\"👍\", \"❤️\", \"👎\"].map(icon => {\n                    const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                    const count = users.length;\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => typeof c.id === \"number\" && addReaction(c.id, icon),\n                      title: users.length > 0 ? users.join(\", \") : \"\",\n                      style: {\n                        background: \"none\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        fontSize: \"1.2rem\"\n                      },\n                      children: [icon, \" \", count > 0 ? count : \"\"]\n                    }, `${c.id}-${icon}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 19\n          }, this), addToId === commentId && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"0.5rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: additionalText,\n              onChange: e => setAdditionalText(e.target.value),\n              rows: 2,\n              cols: 50,\n              style: {\n                width: \"100%\",\n                borderRadius: \"4px\",\n                border: \"1px solid #ccc\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"0.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: async () => {\n                  const existing = comments.find(c => c.id === commentId);\n                  const username = localStorage.getItem(\"username\");\n                  const now = new Date();\n                  const timestamp = now.toLocaleString();\n                  const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                  const updatedText = `${existing.comment}${formattedAddition}`;\n                  await saveEdit(commentId, updatedText);\n                  setAddToId(null);\n                  setAdditionalText(\"\");\n                },\n                children: \"Save Addition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: cancelButtonStyle,\n                onClick: () => setAddToId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 19\n          }, this)]\n        }, commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), isNotifyModalOpen && notifyTargetComment && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        padding: \"1.5rem\",\n        zIndex: 1000,\n        boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n        width: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Notify Teammates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"0.5rem\"\n        },\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: \"italic\",\n          marginBottom: \"1rem\"\n        },\n        children: notifyTargetComment.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter email addresses, comma separated\",\n        value: notifyEmailInput,\n        onChange: e => setNotifyEmailInput(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"0.5rem\",\n          fontSize: \"0.95rem\",\n          marginBottom: \"1rem\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }, this), notifyEmailInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#f1f1f1\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginTop: \"-0.5rem\",\n          marginBottom: \"0.75rem\",\n          padding: \"0.25rem 0.5rem\",\n          fontSize: \"0.9rem\"\n        },\n        children: TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0.25rem\",\n            cursor: \"pointer\"\n          },\n          onClick: () => setNotifyEmailInput(email),\n          children: email\n        }, email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: \"0.75rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: cancelButtonStyle,\n          onClick: () => {\n            setIsNotifyModalOpen(false);\n            setNotifyEmailInput(\"\");\n            setNotifyTargetComment(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: async () => {\n            const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n            if (!toList.length) return;\n            const asset_url = `${window.location.origin}/review/${videoId}`;\n            const username = localStorage.getItem(\"username\");\n            await axios.post(`${BACKEND_URL}/notify_comment`, {\n              video_id: videoId,\n              page: notifyTargetComment.page,\n              comment_text: notifyTargetComment.comment,\n              reviewer: username,\n              to: toList,\n              asset_url\n            });\n            setToastMessage(\"✅ Comment notification sent.\");\n            setTimeout(() => setToastMessage(\"\"), 4000);\n            setIsNotifyModalOpen(false);\n            setNotifyEmailInput(\"\");\n            setNotifyTargetComment(null);\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 11\n    }, this), toastMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"1rem\",\n        right: \"1rem\",\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"6px\",\n        boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n        zIndex: 9999\n      },\n      children: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"QS8Bd4z1NGKFh6IXQ9A2DS0MxjY=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TEAM_EMAILS","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","CommentList","videoId","currentTime","_s","commentRefs","activeCommentId","setActiveCommentId","comments","setComments","Array","isArray","match","find","c","Math","abs","Number","timestamp","id","activeRef","current","scrollIntoView","behavior","block","editingId","setEditingId","editedTextMap","setEditedTextMap","addToId","setAddToId","additionalText","setAdditionalText","isPolling","setIsPolling","lastCommentCountRef","pollTimerRef","isNotifyModalOpen","setIsNotifyModalOpen","notifyTargetComment","setNotifyTargetComment","notifyEmailInput","setNotifyEmailInput","toastMessage","setToastMessage","sortAndSetComments","commentsArr","isStoryboard","some","page","sorted","sort","a","b","pageA","parseInt","pageB","timeA","parseFloat","timeB","addReaction","type","console","log","token","localStorage","getItem","patch","headers","Authorization","res","get","data","err","error","fetchComments","withCredentials","window","_comments","listener","e","then","_e$detail","detail","callback","length","clearTimeout","setTimeout","addEventListener","pollInterval","setInterval","event","CustomEvent","commentCount","dispatchEvent","clearInterval","removeEventListener","startEditing","comment","_comment$id","warn","prev","cancelEditing","handleTextChange","value","saveEdit","text","updatedText","put","deleteComment","confirm","delete","buttonStyle","backgroundColor","color","border","borderRadius","padding","fontSize","cursor","cancelButtonStyle","deleteButtonStyle","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxHeight","overflowY","background","boxShadow","boxSizing","marginBottom","fontWeight","listStyle","margin","map","commentId","reactions","JSON","parse","createRef","commentRef","isActive","ref","display","minutes","floor","seconds","toString","padStart","onChange","target","rows","cols","gap","onClick","whiteSpace","split","user","includes","slice","part","i","metaLine","textParts","trim","marginTop","join","image","src","alt","maxWidth","flexWrap","icon","users","count","title","existing","username","now","Date","toLocaleString","formattedAddition","position","top","left","transform","zIndex","fontStyle","placeholder","filter","toLowerCase","email","justifyContent","toList","Boolean","asset_url","location","origin","post","video_id","comment_text","reviewer","to","bottom","right","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst TEAM_EMAILS = [\n  \"matthew@naveonguides.com\",\n  \"paul@naveonguides.com\",\n  \"ryan@naveonguides.com\",\n  \"mark@naveonguides.com\"\n];\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nconst CommentList = ({ videoId, currentTime }) => {\n  // Highlight and scroll to active comment during video playback\n  const commentRefs = useRef({});\n  const [activeCommentId, setActiveCommentId] = useState(null);\n  const [comments, setComments] = useState([]);\n  // Find and track the active comment based on currentTime\n  useEffect(() => {\n    if (!Array.isArray(comments)) return;\n    const match = comments.find(c =>\n      Math.abs(Number(c.timestamp) - currentTime) <= 1\n    );\n    if (match?.id !== activeCommentId) {\n      setActiveCommentId(match?.id || null);\n    }\n  }, [currentTime, comments]);\n\n  // Scroll to the active comment when it changes\n  useEffect(() => {\n    const activeRef = commentRefs.current[activeCommentId];\n    if (activeRef?.current) {\n      activeRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  }, [activeCommentId]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = (commentsArr) => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(\n      c => c.page != null && c.page !== 0 && c.page !== \"0\"\n    );\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(\n        `${BACKEND_URL}/comments/${id}/reactions`,\n        { [type]: 1 },\n        {\n          headers: { Authorization: token }\n        }\n      );\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, { \n          withCredentials: false,\n          headers: { Authorization: token }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n\n    const listener = (e) => {\n      fetchComments().then((res) => {\n        sortAndSetComments([...res]);\n        if (e?.detail?.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n\n    fetchComments().then((res) => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: (commentCount) => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n\n  const startEditing = (comment) => {\n    const id = comment.id ?? `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap((prev) => ({ ...prev, [id]: comment.comment }));\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n\n  const handleTextChange = (id, value) => {\n    setEditedTextMap((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, { comment: updatedText }, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n\n  if (!videoId) return <p style={{ textAlign: \"center\" }}>Please upload a video to begin reviewing.</p>;\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        maxHeight: \"600px\",\n        overflowY: \"auto\",\n        background: \"#f9f9f9\",\n        padding: \"1rem\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n        boxSizing: \"border-box\"\n      }}\n    >\n        <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\", fontWeight: \"600\", color: \"#333\" }}>\n          Comments\n        </h2>\n        {isPolling && (\n          <div style={{ marginBottom: \"1rem\", color: \"#f9a825\", fontWeight: 500 }}>\n            🟡 Live\n          </div>\n        )}\n        <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n          {comments.map((c) => {\n            if (!c || !c.timestamp || !c.comment || typeof c.id !== \"number\") return null;\n            const commentId = c.id;\n            const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n            // Highlight and ref logic\n            if (!commentRefs.current[c.id]) {\n              commentRefs.current[c.id] = React.createRef();\n            }\n            const commentRef = commentRefs.current[c.id];\n            const isActive = c.id === activeCommentId;\n            console.log(\"Parsed reactions:\", reactions);\n            return (\n              <li\n                key={commentId}\n                ref={commentRef}\n                style={{\n                  background: isActive ? \"#e3f2fd\" : \"#fff\",\n                  border: \"1px solid #ddd\",\n                  borderRadius: \"6px\",\n                  padding: \"0.75rem\",\n                  marginBottom: \"0.75rem\",\n                  width: \"100%\",\n                  boxSizing: \"border-box\"\n                }}\n              >\n                <strong\n                  style={{ display: \"block\", color: \"#555\", marginBottom: \"0.25rem\" }}\n                >\n                  {c.page && parseInt(c.page) > 0 ? (\n                    <>📄 Page {c.page}</>\n                  ) : (\n                    (() => {\n                      const minutes = Math.floor(c.timestamp / 60);\n                      const seconds = Math.floor(c.timestamp % 60).toString().padStart(2, '0');\n                      return `${minutes}:${seconds}`;\n                    })()\n                  )}\n                </strong>\n                {editingId === commentId ? (\n                  <div>\n                    <textarea\n                      value={editedTextMap[commentId] || \"\"}\n                      onChange={(e) => handleTextChange(commentId, e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button style={buttonStyle} onClick={() => saveEdit(commentId)}>Save</button>\n                      <button style={cancelButtonStyle} onClick={cancelEditing}>Cancel</button>\n                    </div>\n                  </div>\n                ) : (\n                  <div>\n                    <div>\n                      <div style={{ color: \"#333\", whiteSpace: \"pre-wrap\", marginBottom: \"0.5rem\" }}>\n                        <div style={{ marginBottom: \"0.25rem\" }}>\n                          {c.comment.split(\"\\n\\n--\")[0]} <span style={{ color: \"#888\" }}>({c.user})</span>\n                        </div>\n                        {c.comment.includes(\"\\n\\n--\") && (\n                          <div style={{ fontSize: \"0.9rem\", color: \"#444\" }}>\n                            {c.comment\n                              .split(\"\\n\\n--\")\n                              .slice(1)\n                              .map((part, i) => {\n                                const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                                return (\n                                  <div key={i} style={{ marginTop: \"0.5rem\" }}>\n                                    <div style={{ fontSize: \"0.95rem\" }}>\n                                      {textParts.join(\"\\n\")} <span style={{ color: \"#666\" }}>({metaLine})</span>\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                          </div>\n                        )}\n                        {c.image && (\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <img\n                              src={c.image}\n                              alt=\"Annotation\"\n                              style={{\n                                maxWidth: \"100%\",\n                                maxHeight: \"200px\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: \"4px\"\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"0.5rem\", marginTop: \"0.5rem\" }}>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#4caf50\" }}\n                          onClick={() => {\n                            setAddToId(commentId);\n                            setAdditionalText(\"\");\n                          }}\n                        >\n                          Add\n                        </button>\n                        <button style={buttonStyle} onClick={() => startEditing(c)}>Edit</button>\n                        <button style={deleteButtonStyle} onClick={() => deleteComment(c.id)}>Delete</button>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#ff9800\" }}\n                          onClick={() => {\n                            setNotifyTargetComment(c);\n                            setNotifyEmailInput(\"\");\n                            setIsNotifyModalOpen(true);\n                          }}\n                        >\n                          @Notify\n                        </button>\n                        <div style={{ display: \"flex\", gap: \"0.25rem\", fontSize: \"1.2rem\" }}>\n                          {[\"👍\", \"❤️\", \"👎\"].map((icon) => {\n                            const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                            const count = users.length;\n                            return (\n                              <button\n                                key={`${c.id}-${icon}`}\n                                onClick={() => typeof c.id === \"number\" && addReaction(c.id, icon)}\n                                title={users.length > 0 ? users.join(\", \") : \"\"}\n                                style={{\n                                  background: \"none\",\n                                  border: \"none\",\n                                  cursor: \"pointer\",\n                                  fontSize: \"1.2rem\"\n                                }}\n                              >\n                                {icon} {count > 0 ? count : \"\"}\n                              </button>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {addToId === commentId && (\n                  <div style={{ marginTop: \"0.5rem\" }}>\n                    <textarea\n                      value={additionalText}\n                      onChange={(e) => setAdditionalText(e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button\n                        style={buttonStyle}\n                        onClick={async () => {\n                          const existing = comments.find(c => c.id === commentId);\n                          const username = localStorage.getItem(\"username\");\n                          const now = new Date();\n                          const timestamp = now.toLocaleString();\n                          const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                          const updatedText = `${existing.comment}${formattedAddition}`;\n                          await saveEdit(commentId, updatedText);\n                          setAddToId(null);\n                          setAdditionalText(\"\");\n                        }}\n                      >\n                        Save Addition\n                      </button>\n                      <button style={cancelButtonStyle} onClick={() => setAddToId(null)}>\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Notify Modal */}\n        {isNotifyModalOpen && notifyTargetComment && (\n          <div style={{\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            padding: \"1.5rem\",\n            zIndex: 1000,\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n            width: \"400px\"\n          }}>\n            <h3 style={{ marginTop: 0 }}>Notify Teammates</h3>\n            <p style={{ marginBottom: \"0.5rem\" }}>Comment:</p>\n            <p style={{ fontStyle: \"italic\", marginBottom: \"1rem\" }}>\n              {notifyTargetComment.comment}\n            </p>\n            <input\n              type=\"text\"\n              placeholder=\"Enter email addresses, comma separated\"\n              value={notifyEmailInput}\n              onChange={(e) => setNotifyEmailInput(e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"1rem\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }}\n            />\n            {/* Email suggestions dropdown */}\n            {notifyEmailInput && (\n              <div style={{\n                backgroundColor: \"#f1f1f1\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\",\n                marginTop: \"-0.5rem\",\n                marginBottom: \"0.75rem\",\n                padding: \"0.25rem 0.5rem\",\n                fontSize: \"0.9rem\"\n              }}>\n                {TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => (\n                  <div\n                    key={email}\n                    style={{ padding: \"0.25rem\", cursor: \"pointer\" }}\n                    onClick={() => setNotifyEmailInput(email)}\n                  >\n                    {email}\n                  </div>\n                ))}\n              </div>\n            )}\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"0.75rem\" }}>\n              <button\n                style={cancelButtonStyle}\n                onClick={() => {\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                style={buttonStyle}\n                onClick={async () => {\n                  const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n                  if (!toList.length) return;\n                  const asset_url = `${window.location.origin}/review/${videoId}`;\n                  const username = localStorage.getItem(\"username\");\n                  await axios.post(`${BACKEND_URL}/notify_comment`, {\n                    video_id: videoId,\n                    page: notifyTargetComment.page,\n                    comment_text: notifyTargetComment.comment,\n                    reviewer: username,\n                    to: toList,\n                    asset_url\n                  });\n                  setToastMessage(\"✅ Comment notification sent.\");\n                  setTimeout(() => setToastMessage(\"\"), 4000);\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        )}\n        {/* Toast message */}\n        {toastMessage && (\n          <div style={{\n            position: \"fixed\",\n            bottom: \"1rem\",\n            right: \"1rem\",\n            backgroundColor: \"#333\",\n            color: \"#fff\",\n            padding: \"0.75rem 1rem\",\n            borderRadius: \"6px\",\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n            zIndex: 9999\n          }}>\n            {toastMessage}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default CommentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}