{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Helper to detect mobile browsers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isMobile = /Mobi|Android/i.test(navigator.userAgent);\nconst CommentForm = () => {\n  _s();\n  const [comment, setComment] = useState(\"\");\n  const [pausedTime, setPausedTime] = useState(\"0.00\");\n  useEffect(() => {\n    const video = document.getElementById(\"review-video\");\n    if (video) {\n      const handlePause = () => {\n        setPausedTime(Math.floor(video.currentTime).toString().padStart(2, \"0\"));\n      };\n      video.addEventListener(\"pause\", handlePause);\n      return () => video.removeEventListener(\"pause\", handlePause);\n    }\n  }, []);\n  const handleSubmit = async () => {\n    const video = document.getElementById(\"review-video\");\n    const timestamp = video !== null && video !== void 0 && video.paused ? pausedTime : Math.floor((video === null || video === void 0 ? void 0 : video.currentTime) || 0).toString().padStart(2, \"0\");\n    try {\n      await axios.post(\"/comments\", {\n        video_id: \"demo-video\",\n        timestamp,\n        comment,\n        user: \"Reviewer\"\n      }, {\n        withCredentials: false\n      });\n      setComment(\"\");\n\n      // Dispatch a custom event to notify comment list to refresh\n      window.dispatchEvent(new Event(\"comments-updated\"));\n    } catch (err) {\n      console.error(\"Failed to submit comment:\", err);\n    }\n  };\n\n  // Web Speech API voice input (desktop only)\n  const startVoiceInput = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Voice input is not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onresult = event => {\n      const spokenText = event.results[0][0].transcript;\n      setComment(prev => prev + \" \" + spokenText);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      placeholder: \"Enter your comment...\",\n      rows: \"4\",\n      cols: \"60\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startVoiceInput,\n      children: \"\\uD83C\\uDFA4 Speak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"tz80IjTxVKb1SFdIJbe6iOikGvQ=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","isMobile","test","navigator","userAgent","CommentForm","_s","comment","setComment","pausedTime","setPausedTime","video","document","getElementById","handlePause","Math","floor","currentTime","toString","padStart","addEventListener","removeEventListener","handleSubmit","timestamp","paused","post","video_id","user","withCredentials","window","dispatchEvent","Event","err","console","error","startVoiceInput","SpeechRecognition","webkitSpeechRecognition","alert","recognition","lang","interimResults","maxAlternatives","onresult","event","spokenText","results","transcript","prev","onerror","start","children","value","onChange","e","target","placeholder","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Helper to detect mobile browsers\nconst isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\nconst CommentForm = () => {\n  const [comment, setComment] = useState(\"\");\n  const [pausedTime, setPausedTime] = useState(\"0.00\");\n\n  useEffect(() => {\n    const video = document.getElementById(\"review-video\");\n    if (video) {\n      const handlePause = () => {\n        setPausedTime(Math.floor(video.currentTime).toString().padStart(2, \"0\"));\n      };\n      video.addEventListener(\"pause\", handlePause);\n      return () => video.removeEventListener(\"pause\", handlePause);\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    const video = document.getElementById(\"review-video\");\n    const timestamp = video?.paused\n      ? pausedTime\n      : Math.floor(video?.currentTime || 0).toString().padStart(2, \"0\");\n\n    try {\n      await axios.post(\"/comments\", {\n        video_id: \"demo-video\",\n        timestamp,\n        comment,\n        user: \"Reviewer\"\n      }, {\n        withCredentials: false\n      });\n\n      setComment(\"\");\n\n      // Dispatch a custom event to notify comment list to refresh\n      window.dispatchEvent(new Event(\"comments-updated\"));\n    } catch (err) {\n      console.error(\"Failed to submit comment:\", err);\n    }\n  };\n\n  // Web Speech API voice input (desktop only)\n  const startVoiceInput = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Voice input is not supported in this browser.\");\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    recognition.onresult = (event) => {\n      const spokenText = event.results[0][0].transcript;\n      setComment((prev) => prev + \" \" + spokenText);\n    };\n\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n\n    recognition.start();\n  };\n\n  return (\n    <div>\n      <textarea\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n        placeholder=\"Enter your comment...\"\n        rows=\"4\"\n        cols=\"60\"\n      />\n      {/* Microphone button for desktop browsers only */}\n      {!isMobile && (\n        <button onClick={startVoiceInput}>ðŸŽ¤ Speak</button>\n      )}\n      <br />\n      <button onClick={handleSubmit}>Add Comment</button>\n    </div>\n  );\n};\n\nexport default CommentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}