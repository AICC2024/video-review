{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentList = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedText, setEditedText] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"/comments/demo-video\", {\n      withCredentials: false\n    }).then(res => {\n      setComments(res.data);\n    }).catch(err => {\n      console.error(\"Failed to load comments:\", err);\n    });\n  }, []);\n  const startEditing = comment => {\n    setEditingId(comment.id);\n    setEditedText(comment.comment);\n  };\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedText(\"\");\n  };\n  const saveEdit = async () => {\n    try {\n      await axios.put(`/comments/${editingId}`, {\n        comment: editedText\n      });\n      const updated = comments.map(comment => comment.id === editingId ? {\n        ...comment,\n        comment: editedText\n      } : comment);\n      setComments(updated);\n      cancelEditing();\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((c, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [c.timestamp, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" \", editingId === c.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedText,\n            onChange: e => setEditedText(e.target.value),\n            rows: 2,\n            cols: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEditing,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [c.comment, \" (\", c.user, \")\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEditing(c),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"2EPGnTJTVl4VGTyYUQ4tjp6L+aQ=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentList","_s","comments","setComments","editingId","setEditingId","editedText","setEditedText","get","withCredentials","then","res","data","catch","err","console","error","startEditing","comment","id","cancelEditing","saveEdit","put","updated","map","children","fileName","_jsxFileName","lineNumber","columnNumber","c","index","timestamp","value","onChange","e","target","rows","cols","onClick","user","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CommentList = () => {\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedText, setEditedText] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/comments/demo-video\", {\n      withCredentials: false\n    })\n    .then((res) => {\n      setComments(res.data);\n    })\n    .catch((err) => {\n      console.error(\"Failed to load comments:\", err);\n    });\n  }, []);\n\n  const startEditing = (comment) => {\n    setEditingId(comment.id);\n    setEditedText(comment.comment);\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedText(\"\");\n  };\n\n  const saveEdit = async () => {\n    try {\n      await axios.put(`/comments/${editingId}`, {\n        comment: editedText\n      });\n      const updated = comments.map((comment) =>\n        comment.id === editingId ? { ...comment, comment: editedText } : comment\n      );\n      setComments(updated);\n      cancelEditing();\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Comments</h4>\n      <ul>\n        {comments.map((c, index) => (\n          <li key={index}>\n            <strong>{c.timestamp}:</strong>{\" \"}\n            {editingId === c.id ? (\n              <>\n                <textarea\n                  value={editedText}\n                  onChange={(e) => setEditedText(e.target.value)}\n                  rows={2}\n                  cols={50}\n                />\n                <br />\n                <button onClick={saveEdit}>Save</button>\n                <button onClick={cancelEditing}>Cancel</button>\n              </>\n            ) : (\n              <>\n                {c.comment} ({c.user}){\" \"}\n                <button onClick={() => startEditing(c)}>Edit</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CommentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}