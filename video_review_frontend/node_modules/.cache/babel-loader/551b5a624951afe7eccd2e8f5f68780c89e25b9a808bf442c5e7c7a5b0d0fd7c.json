{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEAM_EMAILS = [\"matthew@naveonguides.com\", \"paul@naveonguides.com\", \"ryan@naveonguides.com\", \"mark@naveonguides.com\"];\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\nconst CommentList = ({\n  videoId,\n  currentTime,\n  mediaType\n}) => {\n  _s();\n  // Highlight and scroll to active comment during video playback\n  const commentRefs = useRef({});\n  const [activeCommentId, setActiveCommentId] = useState(null);\n  const [comments, setComments] = useState([]);\n  // Find and track the active comment based on currentTime\n  useEffect(() => {\n    if (!Array.isArray(comments)) return;\n    const match = comments.find(c => Math.abs(Number(c.timestamp) - currentTime) <= 1);\n    if ((match === null || match === void 0 ? void 0 : match.id) !== activeCommentId) {\n      setActiveCommentId((match === null || match === void 0 ? void 0 : match.id) || null);\n    }\n  }, [currentTime, comments]);\n\n  // Scroll to the active comment when it changes or currentTime updates, with logging and slight delay\n  useEffect(() => {\n    const activeRef = commentRefs.current[activeCommentId];\n    if (activeRef && typeof activeRef === \"object\" && activeRef.current && typeof activeRef.current.scrollIntoView === \"function\") {\n      setTimeout(() => {\n        try {\n          activeRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\"\n          });\n        } catch (err) {\n          console.warn(\"Scroll failed:\", err);\n        }\n      }, 100);\n    }\n  }, [activeCommentId, currentTime]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = commentsArr => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(c => c.page != null && c.page !== 0 && c.page !== \"0\");\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(`${BACKEND_URL}/comments/${id}/reactions`, {\n        [type]: 1\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n          withCredentials: false,\n          headers: {\n            Authorization: token\n          }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n    const listener = e => {\n      fetchComments().then(res => {\n        var _e$detail;\n        sortAndSetComments([...res]);\n        if (e !== null && e !== void 0 && (_e$detail = e.detail) !== null && _e$detail !== void 0 && _e$detail.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n    fetchComments().then(res => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: commentCount => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n  const startEditing = comment => {\n    var _comment$id;\n    const id = (_comment$id = comment.id) !== null && _comment$id !== void 0 ? _comment$id : `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: comment.comment\n    }));\n  };\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n  const handleTextChange = (id, value) => {\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, {\n        comment: updatedText\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n  const deleteComment = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n  if (!videoId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Please upload a video to begin reviewing.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      maxHeight: \"600px\",\n      overflowY: \"auto\",\n      background: \"#f9f9f9\",\n      padding: \"1rem\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n      boxSizing: \"border-box\"\n    },\n    children: [isPolling && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\",\n        color: \"#f9a825\",\n        fontWeight: 500\n      },\n      children: \"\\uD83D\\uDFE1 Live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0,\n        margin: 0\n      },\n      children: comments.map(c => {\n        if (!c || !c.comment || typeof c.id !== \"number\") return null;\n        const commentId = c.id;\n        const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n        // Highlight and ref logic\n        if (!commentRefs.current[c.id]) {\n          commentRefs.current[c.id] = /*#__PURE__*/React.createRef();\n        }\n        const commentRef = commentRefs.current[c.id];\n        const isActive = c.id === activeCommentId;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: commentRef,\n          style: {\n            background: isActive ? \"#e3f2fd\" : \"#fff\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"6px\",\n            padding: \"0.75rem\",\n            marginBottom: \"0.75rem\",\n            width: \"100%\",\n            boxSizing: \"border-box\"\n          },\n          children: [mediaType === \"videos\" || mediaType === \"voiceovers\" ? /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              display: \"block\",\n              color: \"#555\",\n              marginBottom: \"0.25rem\"\n            },\n            children: (() => {\n              const t = Number(c.timestamp) || 0;\n              const minutes = Math.floor(t / 60);\n              const seconds = Math.floor(t % 60).toString().padStart(2, '0');\n              return `${minutes}:${seconds}`;\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this) : c.page && parseInt(c.page) > 0 ? /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              display: \"block\",\n              color: \"#555\",\n              marginBottom: \"0.25rem\"\n            },\n            children: [\"\\uD83D\\uDCC4 Page \", c.page]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this) : null, editingId === commentId ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedTextMap[commentId] || \"\",\n              onChange: e => handleTextChange(commentId, e.target.value),\n              rows: 2,\n              cols: 50,\n              style: {\n                width: \"100%\",\n                borderRadius: \"4px\",\n                border: \"1px solid #ccc\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"0.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: () => saveEdit(commentId),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: cancelButtonStyle,\n                onClick: cancelEditing,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"#333\",\n                  whiteSpace: \"pre-wrap\",\n                  marginBottom: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: \"0.25rem\"\n                  },\n                  children: [c.comment.split(\"\\n\\n--\")[0], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"#888\"\n                    },\n                    children: [\"(\", c.user, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 58\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this), c.comment.includes(\"\\n\\n--\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: \"0.9rem\",\n                    color: \"#444\"\n                  },\n                  children: c.comment.split(\"\\n\\n--\").slice(1).map((part, i) => {\n                    const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: \"0.5rem\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: \"0.95rem\"\n                        },\n                        children: [textParts.join(\"\\n\"), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"#666\"\n                          },\n                          children: [\"(\", metaLine, \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 62\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 37\n                      }, this)\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 35\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 27\n                }, this), c.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: \"0.5rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: c.image,\n                    alt: \"Annotation\",\n                    style: {\n                      maxWidth: \"100%\",\n                      maxHeight: \"200px\",\n                      border: \"1px solid #ccc\",\n                      borderRadius: \"4px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  gap: \"0.5rem\",\n                  marginTop: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    ...buttonStyle,\n                    backgroundColor: \"#4caf50\"\n                  },\n                  onClick: () => {\n                    setAddToId(commentId);\n                    setAdditionalText(\"\");\n                  },\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: buttonStyle,\n                  onClick: () => startEditing(c),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: deleteButtonStyle,\n                  onClick: () => deleteComment(c.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    ...buttonStyle,\n                    backgroundColor: \"#ff9800\"\n                  },\n                  onClick: () => {\n                    setNotifyTargetComment(c);\n                    setNotifyEmailInput(\"\");\n                    setIsNotifyModalOpen(true);\n                  },\n                  children: \"@Notify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: \"0.25rem\",\n                    fontSize: \"1.2rem\"\n                  },\n                  children: [\"👍\", \"❤️\", \"👎\"].map(icon => {\n                    const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                    const count = users.length;\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => typeof c.id === \"number\" && addReaction(c.id, icon),\n                      title: users.length > 0 ? users.join(\", \") : \"\",\n                      style: {\n                        background: \"none\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        fontSize: \"1.2rem\"\n                      },\n                      children: [icon, \" \", count > 0 ? count : \"\"]\n                    }, `${c.id}-${icon}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this), addToId === commentId && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"0.5rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: additionalText,\n              onChange: e => setAdditionalText(e.target.value),\n              rows: 2,\n              cols: 50,\n              style: {\n                width: \"100%\",\n                borderRadius: \"4px\",\n                border: \"1px solid #ccc\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"0.5rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: buttonStyle,\n                onClick: async () => {\n                  const existing = comments.find(c => c.id === commentId);\n                  const username = localStorage.getItem(\"username\");\n                  const now = new Date();\n                  const timestamp = now.toLocaleString();\n                  const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                  const updatedText = `${existing.comment}${formattedAddition}`;\n                  await saveEdit(commentId, updatedText);\n                  setAddToId(null);\n                  setAdditionalText(\"\");\n                },\n                children: \"Save Addition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: cancelButtonStyle,\n                onClick: () => setAddToId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this)]\n        }, commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), isNotifyModalOpen && notifyTargetComment && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        padding: \"1.5rem\",\n        zIndex: 1000,\n        boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n        width: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Notify Teammates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"0.5rem\"\n        },\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: \"italic\",\n          marginBottom: \"1rem\"\n        },\n        children: notifyTargetComment.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter email addresses, comma separated\",\n        value: notifyEmailInput,\n        onChange: e => setNotifyEmailInput(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"0.5rem\",\n          fontSize: \"0.95rem\",\n          marginBottom: \"1rem\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }, this), notifyEmailInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#f1f1f1\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          marginTop: \"-0.5rem\",\n          marginBottom: \"0.75rem\",\n          padding: \"0.25rem 0.5rem\",\n          fontSize: \"0.9rem\"\n        },\n        children: TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"0.25rem\",\n            cursor: \"pointer\"\n          },\n          onClick: () => setNotifyEmailInput(email),\n          children: email\n        }, email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: \"0.75rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: cancelButtonStyle,\n          onClick: () => {\n            setIsNotifyModalOpen(false);\n            setNotifyEmailInput(\"\");\n            setNotifyTargetComment(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: buttonStyle,\n          onClick: async () => {\n            const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n            if (!toList.length) return;\n            const asset_url = `${window.location.origin}/review/${videoId}`;\n            const username = localStorage.getItem(\"username\");\n            await axios.post(`${BACKEND_URL}/notify_comment`, {\n              video_id: videoId,\n              page: notifyTargetComment.page,\n              comment_text: notifyTargetComment.comment,\n              reviewer: username,\n              to: toList,\n              asset_url\n            });\n            setToastMessage(\"✅ Comment notification sent.\");\n            setTimeout(() => setToastMessage(\"\"), 4000);\n            setIsNotifyModalOpen(false);\n            setNotifyEmailInput(\"\");\n            setNotifyTargetComment(null);\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }, this), toastMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        bottom: \"1rem\",\n        right: \"1rem\",\n        backgroundColor: \"#333\",\n        color: \"#fff\",\n        padding: \"0.75rem 1rem\",\n        borderRadius: \"6px\",\n        boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n        zIndex: 9999\n      },\n      children: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"QS8Bd4z1NGKFh6IXQ9A2DS0MxjY=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","TEAM_EMAILS","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","CommentList","videoId","currentTime","mediaType","_s","commentRefs","activeCommentId","setActiveCommentId","comments","setComments","Array","isArray","match","find","c","Math","abs","Number","timestamp","id","activeRef","current","scrollIntoView","setTimeout","behavior","block","err","console","warn","editingId","setEditingId","editedTextMap","setEditedTextMap","addToId","setAddToId","additionalText","setAdditionalText","isPolling","setIsPolling","lastCommentCountRef","pollTimerRef","isNotifyModalOpen","setIsNotifyModalOpen","notifyTargetComment","setNotifyTargetComment","notifyEmailInput","setNotifyEmailInput","toastMessage","setToastMessage","sortAndSetComments","commentsArr","isStoryboard","some","page","sorted","sort","a","b","pageA","parseInt","pageB","timeA","parseFloat","timeB","addReaction","type","log","token","localStorage","getItem","patch","headers","Authorization","res","get","data","error","fetchComments","withCredentials","window","_comments","listener","e","then","_e$detail","detail","callback","length","clearTimeout","addEventListener","pollInterval","setInterval","event","CustomEvent","commentCount","dispatchEvent","clearInterval","removeEventListener","startEditing","comment","_comment$id","prev","cancelEditing","handleTextChange","value","saveEdit","text","updatedText","put","deleteComment","confirm","delete","buttonStyle","backgroundColor","color","border","borderRadius","padding","fontSize","cursor","cancelButtonStyle","deleteButtonStyle","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxHeight","overflowY","background","boxShadow","boxSizing","marginBottom","fontWeight","listStyle","margin","map","commentId","reactions","JSON","parse","createRef","commentRef","isActive","ref","display","t","minutes","floor","seconds","toString","padStart","onChange","target","rows","cols","gap","onClick","whiteSpace","split","user","includes","slice","part","i","metaLine","textParts","trim","marginTop","join","image","src","alt","maxWidth","flexWrap","icon","users","count","title","existing","username","now","Date","toLocaleString","formattedAddition","position","top","left","transform","zIndex","fontStyle","placeholder","filter","toLowerCase","email","justifyContent","toList","Boolean","asset_url","location","origin","post","video_id","comment_text","reviewer","to","bottom","right","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst TEAM_EMAILS = [\n  \"matthew@naveonguides.com\",\n  \"paul@naveonguides.com\",\n  \"ryan@naveonguides.com\",\n  \"mark@naveonguides.com\"\n];\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nconst CommentList = ({ videoId, currentTime, mediaType }) => {\n  // Highlight and scroll to active comment during video playback\n  const commentRefs = useRef({});\n  const [activeCommentId, setActiveCommentId] = useState(null);\n  const [comments, setComments] = useState([]);\n  // Find and track the active comment based on currentTime\n  useEffect(() => {\n    if (!Array.isArray(comments)) return;\n    const match = comments.find(c =>\n      Math.abs(Number(c.timestamp) - currentTime) <= 1\n    );\n    if (match?.id !== activeCommentId) {\n      setActiveCommentId(match?.id || null);\n    }\n  }, [currentTime, comments]);\n\n  // Scroll to the active comment when it changes or currentTime updates, with logging and slight delay\n  useEffect(() => {\n    const activeRef = commentRefs.current[activeCommentId];\n    if (\n      activeRef &&\n      typeof activeRef === \"object\" &&\n      activeRef.current &&\n      typeof activeRef.current.scrollIntoView === \"function\"\n    ) {\n      setTimeout(() => {\n        try {\n          activeRef.current.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n        } catch (err) {\n          console.warn(\"Scroll failed:\", err);\n        }\n      }, 100);\n    }\n  }, [activeCommentId, currentTime]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = (commentsArr) => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(\n      c => c.page != null && c.page !== 0 && c.page !== \"0\"\n    );\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(\n        `${BACKEND_URL}/comments/${id}/reactions`,\n        { [type]: 1 },\n        {\n          headers: { Authorization: token }\n        }\n      );\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, { \n          withCredentials: false,\n          headers: { Authorization: token }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n\n    const listener = (e) => {\n      fetchComments().then((res) => {\n        sortAndSetComments([...res]);\n        if (e?.detail?.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n\n    fetchComments().then((res) => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: (commentCount) => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n\n  const startEditing = (comment) => {\n    const id = comment.id ?? `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap((prev) => ({ ...prev, [id]: comment.comment }));\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n\n  const handleTextChange = (id, value) => {\n    setEditedTextMap((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, { comment: updatedText }, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n\n  if (!videoId) return <p style={{ textAlign: \"center\" }}>Please upload a video to begin reviewing.</p>;\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        maxHeight: \"600px\",\n        overflowY: \"auto\",\n        background: \"#f9f9f9\",\n        padding: \"1rem\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n        boxSizing: \"border-box\"\n      }}\n    >\n        {isPolling && (\n          <div style={{ marginBottom: \"1rem\", color: \"#f9a825\", fontWeight: 500 }}>\n            🟡 Live\n          </div>\n        )}\n        <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n          {comments.map((c) => {\n            if (!c || !c.comment || typeof c.id !== \"number\") return null;\n            const commentId = c.id;\n            const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n            // Highlight and ref logic\n            if (!commentRefs.current[c.id]) {\n              commentRefs.current[c.id] = React.createRef();\n            }\n            const commentRef = commentRefs.current[c.id];\n            const isActive = c.id === activeCommentId;\n            return (\n              <li\n                key={commentId}\n                ref={commentRef}\n                style={{\n                  background: isActive ? \"#e3f2fd\" : \"#fff\",\n                  border: \"1px solid #ddd\",\n                  borderRadius: \"6px\",\n                  padding: \"0.75rem\",\n                  marginBottom: \"0.75rem\",\n                  width: \"100%\",\n                  boxSizing: \"border-box\"\n                }}\n              >\n                {(mediaType === \"videos\" || mediaType === \"voiceovers\") ? (\n                  <strong style={{ display: \"block\", color: \"#555\", marginBottom: \"0.25rem\" }}>\n                    {(() => {\n                      const t = Number(c.timestamp) || 0;\n                      const minutes = Math.floor(t / 60);\n                      const seconds = Math.floor(t % 60).toString().padStart(2, '0');\n                      return `${minutes}:${seconds}`;\n                    })()}\n                  </strong>\n                ) : c.page && parseInt(c.page) > 0 ? (\n                  <strong style={{ display: \"block\", color: \"#555\", marginBottom: \"0.25rem\" }}>\n                    📄 Page {c.page}\n                  </strong>\n                ) : null}\n                {editingId === commentId ? (\n                  <div>\n                    <textarea\n                      value={editedTextMap[commentId] || \"\"}\n                      onChange={(e) => handleTextChange(commentId, e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button style={buttonStyle} onClick={() => saveEdit(commentId)}>Save</button>\n                      <button style={cancelButtonStyle} onClick={cancelEditing}>Cancel</button>\n                    </div>\n                  </div>\n                ) : (\n                  <div>\n                    <div>\n                      <div style={{ color: \"#333\", whiteSpace: \"pre-wrap\", marginBottom: \"0.5rem\" }}>\n                        <div style={{ marginBottom: \"0.25rem\" }}>\n                          {c.comment.split(\"\\n\\n--\")[0]} <span style={{ color: \"#888\" }}>({c.user})</span>\n                        </div>\n                        {c.comment.includes(\"\\n\\n--\") && (\n                          <div style={{ fontSize: \"0.9rem\", color: \"#444\" }}>\n                            {c.comment\n                              .split(\"\\n\\n--\")\n                              .slice(1)\n                              .map((part, i) => {\n                                const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                                return (\n                                  <div key={i} style={{ marginTop: \"0.5rem\" }}>\n                                    <div style={{ fontSize: \"0.95rem\" }}>\n                                      {textParts.join(\"\\n\")} <span style={{ color: \"#666\" }}>({metaLine})</span>\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                          </div>\n                        )}\n                        {c.image && (\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <img\n                              src={c.image}\n                              alt=\"Annotation\"\n                              style={{\n                                maxWidth: \"100%\",\n                                maxHeight: \"200px\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: \"4px\"\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"0.5rem\", marginTop: \"0.5rem\" }}>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#4caf50\" }}\n                          onClick={() => {\n                            setAddToId(commentId);\n                            setAdditionalText(\"\");\n                          }}\n                        >\n                          Add\n                        </button>\n                        <button style={buttonStyle} onClick={() => startEditing(c)}>Edit</button>\n                        <button style={deleteButtonStyle} onClick={() => deleteComment(c.id)}>Delete</button>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#ff9800\" }}\n                          onClick={() => {\n                            setNotifyTargetComment(c);\n                            setNotifyEmailInput(\"\");\n                            setIsNotifyModalOpen(true);\n                          }}\n                        >\n                          @Notify\n                        </button>\n                        <div style={{ display: \"flex\", gap: \"0.25rem\", fontSize: \"1.2rem\" }}>\n                          {[\"👍\", \"❤️\", \"👎\"].map((icon) => {\n                            const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                            const count = users.length;\n                            return (\n                              <button\n                                key={`${c.id}-${icon}`}\n                                onClick={() => typeof c.id === \"number\" && addReaction(c.id, icon)}\n                                title={users.length > 0 ? users.join(\", \") : \"\"}\n                                style={{\n                                  background: \"none\",\n                                  border: \"none\",\n                                  cursor: \"pointer\",\n                                  fontSize: \"1.2rem\"\n                                }}\n                              >\n                                {icon} {count > 0 ? count : \"\"}\n                              </button>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {addToId === commentId && (\n                  <div style={{ marginTop: \"0.5rem\" }}>\n                    <textarea\n                      value={additionalText}\n                      onChange={(e) => setAdditionalText(e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button\n                        style={buttonStyle}\n                        onClick={async () => {\n                          const existing = comments.find(c => c.id === commentId);\n                          const username = localStorage.getItem(\"username\");\n                          const now = new Date();\n                          const timestamp = now.toLocaleString();\n                          const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                          const updatedText = `${existing.comment}${formattedAddition}`;\n                          await saveEdit(commentId, updatedText);\n                          setAddToId(null);\n                          setAdditionalText(\"\");\n                        }}\n                      >\n                        Save Addition\n                      </button>\n                      <button style={cancelButtonStyle} onClick={() => setAddToId(null)}>\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Notify Modal */}\n        {isNotifyModalOpen && notifyTargetComment && (\n          <div style={{\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            padding: \"1.5rem\",\n            zIndex: 1000,\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n            width: \"400px\"\n          }}>\n            <h3 style={{ marginTop: 0 }}>Notify Teammates</h3>\n            <p style={{ marginBottom: \"0.5rem\" }}>Comment:</p>\n            <p style={{ fontStyle: \"italic\", marginBottom: \"1rem\" }}>\n              {notifyTargetComment.comment}\n            </p>\n            <input\n              type=\"text\"\n              placeholder=\"Enter email addresses, comma separated\"\n              value={notifyEmailInput}\n              onChange={(e) => setNotifyEmailInput(e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"1rem\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }}\n            />\n            {/* Email suggestions dropdown */}\n            {notifyEmailInput && (\n              <div style={{\n                backgroundColor: \"#f1f1f1\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\",\n                marginTop: \"-0.5rem\",\n                marginBottom: \"0.75rem\",\n                padding: \"0.25rem 0.5rem\",\n                fontSize: \"0.9rem\"\n              }}>\n                {TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => (\n                  <div\n                    key={email}\n                    style={{ padding: \"0.25rem\", cursor: \"pointer\" }}\n                    onClick={() => setNotifyEmailInput(email)}\n                  >\n                    {email}\n                  </div>\n                ))}\n              </div>\n            )}\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"0.75rem\" }}>\n              <button\n                style={cancelButtonStyle}\n                onClick={() => {\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                style={buttonStyle}\n                onClick={async () => {\n                  const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n                  if (!toList.length) return;\n                  const asset_url = `${window.location.origin}/review/${videoId}`;\n                  const username = localStorage.getItem(\"username\");\n                  await axios.post(`${BACKEND_URL}/notify_comment`, {\n                    video_id: videoId,\n                    page: notifyTargetComment.page,\n                    comment_text: notifyTargetComment.comment,\n                    reviewer: username,\n                    to: toList,\n                    asset_url\n                  });\n                  setToastMessage(\"✅ Comment notification sent.\");\n                  setTimeout(() => setToastMessage(\"\"), 4000);\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        )}\n        {/* Toast message */}\n        {toastMessage && (\n          <div style={{\n            position: \"fixed\",\n            bottom: \"1rem\",\n            right: \"1rem\",\n            backgroundColor: \"#333\",\n            color: \"#fff\",\n            padding: \"0.75rem 1rem\",\n            borderRadius: \"6px\",\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n            zIndex: 9999\n          }}>\n            {toastMessage}\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default CommentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}