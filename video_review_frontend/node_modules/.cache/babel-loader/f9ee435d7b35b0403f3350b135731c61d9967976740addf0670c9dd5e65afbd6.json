{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TEAM_EMAILS = [\"matthew@naveonguides.com\", \"paul@naveonguides.com\", \"ryan@naveonguides.com\", \"mark@naveonguides.com\"];\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\nconst CommentList = ({\n  videoId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = commentsArr => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(c => c.page != null && c.page !== 0 && c.page !== \"0\");\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(`${BACKEND_URL}/comments/${id}/reactions`, {\n        [type]: 1\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n          withCredentials: false,\n          headers: {\n            Authorization: token\n          }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n    const listener = e => {\n      fetchComments().then(res => {\n        var _e$detail;\n        sortAndSetComments([...res]);\n        if (e !== null && e !== void 0 && (_e$detail = e.detail) !== null && _e$detail !== void 0 && _e$detail.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n    fetchComments().then(res => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: commentCount => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n  const startEditing = comment => {\n    var _comment$id;\n    const id = (_comment$id = comment.id) !== null && _comment$id !== void 0 ? _comment$id : `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: comment.comment\n    }));\n  };\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n  const handleTextChange = (id, value) => {\n    setEditedTextMap(prev => ({\n      ...prev,\n      [id]: value\n    }));\n  };\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, {\n        comment: updatedText\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n  const deleteComment = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: {\n          Authorization: token\n        }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n  if (!videoId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: \"Please upload a video to begin reviewing.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"1rem\",\n      alignItems: \"flex-start\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        maxHeight: \"500px\",\n        overflowY: \"auto\",\n        paddingRight: \"1rem\",\n        background: \"#f9f9f9\",\n        padding: \"1rem\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          fontSize: \"1.5rem\",\n          fontWeight: \"600\",\n          color: \"#333\"\n        },\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), isPolling && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: \"#f9a825\",\n          fontWeight: 500\n        },\n        children: \"\\uD83D\\uDFE1 Live\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0,\n          margin: 0\n        },\n        children: comments.map(c => {\n          if (!c || !c.timestamp || !c.comment || typeof c.id !== \"number\") return null;\n          const commentId = c.id;\n          const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n          console.log(\"Parsed reactions:\", reactions);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              background: \"#fff\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"6px\",\n              padding: \"0.75rem\",\n              marginBottom: \"0.75rem\",\n              width: \"100%\",\n              boxSizing: \"border-box\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                display: \"block\",\n                color: \"#555\",\n                marginBottom: \"0.25rem\"\n              },\n              children: c.page && parseInt(c.page) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"\\uD83D\\uDCC4 Page \", c.page]\n              }, void 0, true) : (() => {\n                const minutes = Math.floor(c.timestamp / 60);\n                const seconds = Math.floor(c.timestamp % 60).toString().padStart(2, '0');\n                return `${minutes}:${seconds}`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), editingId === commentId ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: editedTextMap[commentId] || \"\",\n                onChange: e => handleTextChange(commentId, e.target.value),\n                rows: 2,\n                cols: 50,\n                style: {\n                  width: \"100%\",\n                  borderRadius: \"4px\",\n                  border: \"1px solid #ccc\",\n                  padding: \"0.5rem\",\n                  fontSize: \"0.95rem\",\n                  marginBottom: \"0.5rem\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: buttonStyle,\n                  onClick: () => saveEdit(commentId),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: cancelButtonStyle,\n                  onClick: cancelEditing,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: \"#333\",\n                    whiteSpace: \"pre-wrap\",\n                    marginBottom: \"0.5rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginBottom: \"0.25rem\"\n                    },\n                    children: [c.comment.split(\"\\n\\n--\")[0], \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"#888\"\n                      },\n                      children: [\"(\", c.user, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 58\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this), c.comment.includes(\"\\n\\n--\") && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: \"0.9rem\",\n                      color: \"#444\"\n                    },\n                    children: c.comment.split(\"\\n\\n--\").slice(1).map((part, i) => {\n                      const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginTop: \"0.5rem\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            fontSize: \"0.95rem\"\n                          },\n                          children: [textParts.join(\"\\n\"), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              color: \"#666\"\n                            },\n                            children: [\"(\", metaLine, \")\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 320,\n                            columnNumber: 62\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 37\n                        }, this)\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 35\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this), c.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"0.5rem\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: c.image,\n                      alt: \"Annotation\",\n                      style: {\n                        maxWidth: \"100%\",\n                        maxHeight: \"200px\",\n                        border: \"1px solid #ccc\",\n                        borderRadius: \"4px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    gap: \"0.5rem\",\n                    marginTop: \"0.5rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      ...buttonStyle,\n                      backgroundColor: \"#4caf50\"\n                    },\n                    onClick: () => {\n                      setAddToId(commentId);\n                      setAdditionalText(\"\");\n                    },\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: buttonStyle,\n                    onClick: () => startEditing(c),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: deleteButtonStyle,\n                    onClick: () => deleteComment(c.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      ...buttonStyle,\n                      backgroundColor: \"#ff9800\"\n                    },\n                    onClick: () => {\n                      setNotifyTargetComment(c);\n                      setNotifyEmailInput(\"\");\n                      setIsNotifyModalOpen(true);\n                    },\n                    children: \"@Notify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      gap: \"0.25rem\",\n                      fontSize: \"1.2rem\"\n                    },\n                    children: [\"👍\", \"❤️\", \"👎\"].map(icon => {\n                      const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                      const count = users.length;\n                      return /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => typeof c.id === \"number\" && addReaction(c.id, icon),\n                        title: users.length > 0 ? users.join(\", \") : \"\",\n                        style: {\n                          background: \"none\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          fontSize: \"1.2rem\"\n                        },\n                        children: [icon, \" \", count > 0 ? count : \"\"]\n                      }, `${c.id}-${icon}`, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), addToId === commentId && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"0.5rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: additionalText,\n                onChange: e => setAdditionalText(e.target.value),\n                rows: 2,\n                cols: 50,\n                style: {\n                  width: \"100%\",\n                  borderRadius: \"4px\",\n                  border: \"1px solid #ccc\",\n                  padding: \"0.5rem\",\n                  fontSize: \"0.95rem\",\n                  marginBottom: \"0.5rem\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"0.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: buttonStyle,\n                  onClick: async () => {\n                    const existing = comments.find(c => c.id === commentId);\n                    const username = localStorage.getItem(\"username\");\n                    const now = new Date();\n                    const timestamp = now.toLocaleString();\n                    const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                    const updatedText = `${existing.comment}${formattedAddition}`;\n                    await saveEdit(commentId, updatedText);\n                    setAddToId(null);\n                    setAdditionalText(\"\");\n                  },\n                  children: \"Save Addition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: cancelButtonStyle,\n                  onClick: () => setAddToId(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this)]\n          }, commentId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), isNotifyModalOpen && notifyTargetComment && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          backgroundColor: \"#fff\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\",\n          padding: \"1.5rem\",\n          zIndex: 1000,\n          boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n          width: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Notify Teammates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: \"0.5rem\"\n          },\n          children: \"Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontStyle: \"italic\",\n            marginBottom: \"1rem\"\n          },\n          children: notifyTargetComment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter email addresses, comma separated\",\n          value: notifyEmailInput,\n          onChange: e => setNotifyEmailInput(e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\",\n            fontSize: \"0.95rem\",\n            marginBottom: \"1rem\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), notifyEmailInput && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#f1f1f1\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            marginTop: \"-0.5rem\",\n            marginBottom: \"0.75rem\",\n            padding: \"0.25rem 0.5rem\",\n            fontSize: \"0.9rem\"\n          },\n          children: TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"0.25rem\",\n              cursor: \"pointer\"\n            },\n            onClick: () => setNotifyEmailInput(email),\n            children: email\n          }, email, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            gap: \"0.75rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: cancelButtonStyle,\n            onClick: () => {\n              setIsNotifyModalOpen(false);\n              setNotifyEmailInput(\"\");\n              setNotifyTargetComment(null);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: buttonStyle,\n            onClick: async () => {\n              const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n              if (!toList.length) return;\n              const asset_url = `${window.location.origin}/review/${videoId}`;\n              const username = localStorage.getItem(\"username\");\n              await axios.post(`${BACKEND_URL}/notify_comment`, {\n                video_id: videoId,\n                page: notifyTargetComment.page,\n                comment_text: notifyTargetComment.comment,\n                reviewer: username,\n                to: toList,\n                asset_url\n              });\n              setToastMessage(\"✅ Comment notification sent.\");\n              setTimeout(() => setToastMessage(\"\"), 4000);\n              setIsNotifyModalOpen(false);\n              setNotifyEmailInput(\"\");\n              setNotifyTargetComment(null);\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), toastMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          bottom: \"1rem\",\n          right: \"1rem\",\n          backgroundColor: \"#333\",\n          color: \"#fff\",\n          padding: \"0.75rem 1rem\",\n          borderRadius: \"6px\",\n          boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n          zIndex: 9999\n        },\n        children: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"yY2OkomQ1vibh5AdyKEW+BQXDSI=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TEAM_EMAILS","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","CommentList","videoId","_s","comments","setComments","editingId","setEditingId","editedTextMap","setEditedTextMap","addToId","setAddToId","additionalText","setAdditionalText","isPolling","setIsPolling","lastCommentCountRef","pollTimerRef","isNotifyModalOpen","setIsNotifyModalOpen","notifyTargetComment","setNotifyTargetComment","notifyEmailInput","setNotifyEmailInput","toastMessage","setToastMessage","sortAndSetComments","commentsArr","isStoryboard","some","c","page","sorted","sort","a","b","pageA","parseInt","pageB","timeA","parseFloat","timestamp","timeB","addReaction","id","type","console","log","token","localStorage","getItem","patch","headers","Authorization","res","get","data","err","error","fetchComments","withCredentials","window","_comments","listener","e","then","_e$detail","detail","callback","length","current","clearTimeout","setTimeout","Array","isArray","addEventListener","pollInterval","setInterval","event","CustomEvent","commentCount","dispatchEvent","clearInterval","removeEventListener","startEditing","comment","_comment$id","warn","prev","cancelEditing","handleTextChange","value","saveEdit","text","updatedText","put","deleteComment","confirm","delete","buttonStyle","backgroundColor","color","border","borderRadius","padding","fontSize","cursor","cancelButtonStyle","deleteButtonStyle","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","alignItems","flex","maxHeight","overflowY","paddingRight","background","boxShadow","marginBottom","fontWeight","listStyle","margin","map","commentId","reactions","JSON","parse","width","boxSizing","minutes","Math","floor","seconds","toString","padStart","onChange","target","rows","cols","onClick","whiteSpace","split","user","includes","slice","part","i","metaLine","textParts","trim","marginTop","join","image","src","alt","maxWidth","flexWrap","icon","users","count","title","existing","find","username","now","Date","toLocaleString","formattedAddition","position","top","left","transform","zIndex","fontStyle","placeholder","filter","toLowerCase","email","justifyContent","toList","Boolean","asset_url","location","origin","post","video_id","comment_text","reviewer","to","bottom","right","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst TEAM_EMAILS = [\n  \"matthew@naveonguides.com\",\n  \"paul@naveonguides.com\",\n  \"ryan@naveonguides.com\",\n  \"mark@naveonguides.com\"\n];\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL || \"\";\n\nconst CommentList = ({ videoId }) => {\n  const [comments, setComments] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [editedTextMap, setEditedTextMap] = useState({});\n  const [addToId, setAddToId] = useState(null);\n\n  const [additionalText, setAdditionalText] = useState(\"\");\n  const [isPolling, setIsPolling] = useState(false);\n  const lastCommentCountRef = useRef(0);\n  const pollTimerRef = useRef(null);\n\n  // Notify modal state\n  const [isNotifyModalOpen, setIsNotifyModalOpen] = useState(false);\n  const [notifyTargetComment, setNotifyTargetComment] = useState(null);\n  const [notifyEmailInput, setNotifyEmailInput] = useState(\"\");\n\n  // Toast feedback\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  // Helper: sort and set comments for video or storyboard\n  // - If all comments have no page (null/0/\"0\"), treat as video: sort by timestamp\n  // - If any comment has a page (not null/0/\"0\"), treat as storyboard: sort by page\n  const sortAndSetComments = (commentsArr) => {\n    // Detect whether this is a storyboard (has any page) or a video (all page null/0/\"0\")\n    const isStoryboard = commentsArr.some(\n      c => c.page != null && c.page !== 0 && c.page !== \"0\"\n    );\n    const sorted = [...commentsArr].sort((a, b) => {\n      if (isStoryboard) {\n        // Storyboard: sort by page (page is required)\n        const pageA = parseInt(a.page) || -1;\n        const pageB = parseInt(b.page) || -1;\n        return pageA - pageB;\n      } else {\n        // Video: sort by timestamp\n        const timeA = parseFloat(a.timestamp) || 0;\n        const timeB = parseFloat(b.timestamp) || 0;\n        return timeA - timeB;\n      }\n    });\n    setComments(sorted);\n  };\n\n\n  // Add reaction and persist to backend, then immediately update UI with latest comments\n  const addReaction = async (id, type) => {\n    console.log(\"Sending reaction\", type, \"for comment\", id);\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.patch(\n        `${BACKEND_URL}/comments/${id}/reactions`,\n        { [type]: 1 },\n        {\n          headers: { Authorization: token }\n        }\n      );\n      // Re-fetch comments after successful reaction update\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to update reaction:\", err);\n    }\n  };\n\n  useEffect(() => {\n    if (!videoId) return;\n    const fetchComments = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, { \n          withCredentials: false,\n          headers: { Authorization: token }\n        });\n        console.log(\"Fetched updated comments:\", res.data);\n        window._comments = res.data;\n        return res.data;\n      } catch (err) {\n        console.error(\"Failed to load comments:\", err);\n        return [];\n      }\n    };\n\n    const listener = (e) => {\n      fetchComments().then((res) => {\n        sortAndSetComments([...res]);\n        if (e?.detail?.callback) {\n          e.detail.callback(res.length);\n        }\n\n        // Show \"🟡 Live\" briefly when new comment(s) detected\n        if (res.length > lastCommentCountRef.current) {\n          lastCommentCountRef.current = res.length;\n          setIsPolling(true);\n          if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n          pollTimerRef.current = setTimeout(() => {\n            setIsPolling(false);\n          }, 3000); // show \"Live\" for 3 seconds after a new comment\n        }\n      });\n    };\n\n    fetchComments().then((res) => {\n      sortAndSetComments([...res]);\n      lastCommentCountRef.current = Array.isArray(res) ? res.length : 0;\n    });\n\n    window.addEventListener(\"comments-updated\", listener);\n\n    // Polling interval for live comment updates (every 3 seconds)\n    const pollInterval = setInterval(() => {\n      if (!videoId) return;\n      const event = new CustomEvent(\"comments-updated\", {\n        detail: {\n          callback: (commentCount) => {\n            console.log(\"🛑 Polling callback (comments):\", commentCount);\n          }\n        }\n      });\n      window.dispatchEvent(event);\n    }, 3000);\n\n    return () => {\n      clearInterval(pollInterval);\n      if (pollTimerRef.current) clearTimeout(pollTimerRef.current);\n      window.removeEventListener(\"comments-updated\", listener);\n    };\n  }, [videoId]);\n\n  const startEditing = (comment) => {\n    const id = comment.id ?? `${comment.timestamp}-${comment.comment}`;\n    if (!id) {\n      console.warn(\"Invalid comment selected for editing:\", comment);\n      return;\n    }\n    console.log(\"Editing comment ID:\", id);\n    setEditingId(id);\n    setEditedTextMap((prev) => ({ ...prev, [id]: comment.comment }));\n  };\n\n  const cancelEditing = () => {\n    setEditingId(null);\n    setEditedTextMap({});\n  };\n\n  const handleTextChange = (id, value) => {\n    setEditedTextMap((prev) => ({ ...prev, [id]: value }));\n  };\n\n  const saveEdit = async (id, text = null) => {\n    const updatedText = text !== null ? text : editedTextMap[id];\n    if (typeof id !== \"number\") {\n      console.warn(\"Skipping save for fallback ID:\", id);\n      return;\n    }\n\n    try {\n      console.log(`Saving comment ID ${id}:`, updatedText);\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`${BACKEND_URL}/comments/${id}`, { comment: updatedText }, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      console.log(\"Fetched updated comments:\", res.data);\n      sortAndSetComments(res.data);\n      setEditingId(null);\n      setEditedTextMap({});\n    } catch (err) {\n      console.error(\"Failed to update comment:\", err);\n    }\n  };\n\n  const deleteComment = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this comment?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`${BACKEND_URL}/comments/${id}`, {\n        headers: { Authorization: token }\n      });\n      const res = await axios.get(`${BACKEND_URL}/comments/${videoId}`, {\n        withCredentials: false,\n        headers: { Authorization: token }\n      });\n      sortAndSetComments(res.data);\n    } catch (err) {\n      console.error(\"Failed to delete comment:\", err);\n    }\n  };\n\n  // Button styles for consistent look\n  const buttonStyle = {\n    backgroundColor: \"#1976d2\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    padding: \"0.35rem 0.75rem\",\n    fontSize: \"0.9rem\",\n    cursor: \"pointer\"\n  };\n  const cancelButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#aaa\"\n  };\n  const deleteButtonStyle = {\n    ...buttonStyle,\n    backgroundColor: \"#d32f2f\"\n  };\n\n  if (!videoId) return <p style={{ textAlign: \"center\" }}>Please upload a video to begin reviewing.</p>;\n\n  return (\n    <div style={{ display: \"flex\", gap: \"1rem\", alignItems: \"flex-start\" }}>\n      <div style={{ flex: 2 }}></div>\n      <div\n        style={{\n          flex: 1,\n          maxHeight: \"500px\",\n          overflowY: \"auto\",\n          paddingRight: \"1rem\",\n          background: \"#f9f9f9\",\n          padding: \"1rem\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\"\n        }}\n      >\n        <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\", fontWeight: \"600\", color: \"#333\" }}>\n          Comments\n        </h2>\n        {isPolling && (\n          <div style={{ marginBottom: \"1rem\", color: \"#f9a825\", fontWeight: 500 }}>\n            🟡 Live\n          </div>\n        )}\n        <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n          {comments.map((c) => {\n            if (!c || !c.timestamp || !c.comment || typeof c.id !== \"number\") return null;\n            const commentId = c.id;\n            const reactions = typeof c.reactions === \"string\" ? JSON.parse(c.reactions) : c.reactions || {};\n            console.log(\"Parsed reactions:\", reactions);\n            return (\n              <li\n                key={commentId}\n                style={{\n                  background: \"#fff\",\n                  border: \"1px solid #ddd\",\n                  borderRadius: \"6px\",\n                  padding: \"0.75rem\",\n                  marginBottom: \"0.75rem\",\n                  width: \"100%\",\n                  boxSizing: \"border-box\"\n                }}\n              >\n                <strong\n                  style={{ display: \"block\", color: \"#555\", marginBottom: \"0.25rem\" }}\n                >\n                  {c.page && parseInt(c.page) > 0 ? (\n                    <>📄 Page {c.page}</>\n                  ) : (\n                    (() => {\n                      const minutes = Math.floor(c.timestamp / 60);\n                      const seconds = Math.floor(c.timestamp % 60).toString().padStart(2, '0');\n                      return `${minutes}:${seconds}`;\n                    })()\n                  )}\n                </strong>\n                {editingId === commentId ? (\n                  <div>\n                    <textarea\n                      value={editedTextMap[commentId] || \"\"}\n                      onChange={(e) => handleTextChange(commentId, e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button style={buttonStyle} onClick={() => saveEdit(commentId)}>Save</button>\n                      <button style={cancelButtonStyle} onClick={cancelEditing}>Cancel</button>\n                    </div>\n                  </div>\n                ) : (\n                  <div>\n                    <div>\n                      <div style={{ color: \"#333\", whiteSpace: \"pre-wrap\", marginBottom: \"0.5rem\" }}>\n                        <div style={{ marginBottom: \"0.25rem\" }}>\n                          {c.comment.split(\"\\n\\n--\")[0]} <span style={{ color: \"#888\" }}>({c.user})</span>\n                        </div>\n                        {c.comment.includes(\"\\n\\n--\") && (\n                          <div style={{ fontSize: \"0.9rem\", color: \"#444\" }}>\n                            {c.comment\n                              .split(\"\\n\\n--\")\n                              .slice(1)\n                              .map((part, i) => {\n                                const [metaLine, ...textParts] = part.trim().split(\"\\n\");\n                                return (\n                                  <div key={i} style={{ marginTop: \"0.5rem\" }}>\n                                    <div style={{ fontSize: \"0.95rem\" }}>\n                                      {textParts.join(\"\\n\")} <span style={{ color: \"#666\" }}>({metaLine})</span>\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                          </div>\n                        )}\n                        {c.image && (\n                          <div style={{ marginTop: \"0.5rem\" }}>\n                            <img\n                              src={c.image}\n                              alt=\"Annotation\"\n                              style={{\n                                maxWidth: \"100%\",\n                                maxHeight: \"200px\",\n                                border: \"1px solid #ccc\",\n                                borderRadius: \"4px\"\n                              }}\n                            />\n                          </div>\n                        )}\n                      </div>\n                      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"0.5rem\", marginTop: \"0.5rem\" }}>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#4caf50\" }}\n                          onClick={() => {\n                            setAddToId(commentId);\n                            setAdditionalText(\"\");\n                          }}\n                        >\n                          Add\n                        </button>\n                        <button style={buttonStyle} onClick={() => startEditing(c)}>Edit</button>\n                        <button style={deleteButtonStyle} onClick={() => deleteComment(c.id)}>Delete</button>\n                        <button\n                          style={{ ...buttonStyle, backgroundColor: \"#ff9800\" }}\n                          onClick={() => {\n                            setNotifyTargetComment(c);\n                            setNotifyEmailInput(\"\");\n                            setIsNotifyModalOpen(true);\n                          }}\n                        >\n                          @Notify\n                        </button>\n                        <div style={{ display: \"flex\", gap: \"0.25rem\", fontSize: \"1.2rem\" }}>\n                          {[\"👍\", \"❤️\", \"👎\"].map((icon) => {\n                            const users = Array.isArray(reactions[icon]) ? reactions[icon] : [];\n                            const count = users.length;\n                            return (\n                              <button\n                                key={`${c.id}-${icon}`}\n                                onClick={() => typeof c.id === \"number\" && addReaction(c.id, icon)}\n                                title={users.length > 0 ? users.join(\", \") : \"\"}\n                                style={{\n                                  background: \"none\",\n                                  border: \"none\",\n                                  cursor: \"pointer\",\n                                  fontSize: \"1.2rem\"\n                                }}\n                              >\n                                {icon} {count > 0 ? count : \"\"}\n                              </button>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {addToId === commentId && (\n                  <div style={{ marginTop: \"0.5rem\" }}>\n                    <textarea\n                      value={additionalText}\n                      onChange={(e) => setAdditionalText(e.target.value)}\n                      rows={2}\n                      cols={50}\n                      style={{\n                        width: \"100%\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                        padding: \"0.5rem\",\n                        fontSize: \"0.95rem\",\n                        marginBottom: \"0.5rem\"\n                      }}\n                    />\n                    <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <button\n                        style={buttonStyle}\n                        onClick={async () => {\n                          const existing = comments.find(c => c.id === commentId);\n                          const username = localStorage.getItem(\"username\");\n                          const now = new Date();\n                          const timestamp = now.toLocaleString();\n                          const formattedAddition = `\\n\\n-- ${username} (${timestamp})\\n${additionalText}`;\n                          const updatedText = `${existing.comment}${formattedAddition}`;\n                          await saveEdit(commentId, updatedText);\n                          setAddToId(null);\n                          setAdditionalText(\"\");\n                        }}\n                      >\n                        Save Addition\n                      </button>\n                      <button style={cancelButtonStyle} onClick={() => setAddToId(null)}>\n                        Cancel\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n\n        {/* Notify Modal */}\n        {isNotifyModalOpen && notifyTargetComment && (\n          <div style={{\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"#fff\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            padding: \"1.5rem\",\n            zIndex: 1000,\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n            width: \"400px\"\n          }}>\n            <h3 style={{ marginTop: 0 }}>Notify Teammates</h3>\n            <p style={{ marginBottom: \"0.5rem\" }}>Comment:</p>\n            <p style={{ fontStyle: \"italic\", marginBottom: \"1rem\" }}>\n              {notifyTargetComment.comment}\n            </p>\n            <input\n              type=\"text\"\n              placeholder=\"Enter email addresses, comma separated\"\n              value={notifyEmailInput}\n              onChange={(e) => setNotifyEmailInput(e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"0.5rem\",\n                fontSize: \"0.95rem\",\n                marginBottom: \"1rem\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\"\n              }}\n            />\n            {/* Email suggestions dropdown */}\n            {notifyEmailInput && (\n              <div style={{\n                backgroundColor: \"#f1f1f1\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"4px\",\n                marginTop: \"-0.5rem\",\n                marginBottom: \"0.75rem\",\n                padding: \"0.25rem 0.5rem\",\n                fontSize: \"0.9rem\"\n              }}>\n                {TEAM_EMAILS.filter(e => e.includes(notifyEmailInput.toLowerCase())).map(email => (\n                  <div\n                    key={email}\n                    style={{ padding: \"0.25rem\", cursor: \"pointer\" }}\n                    onClick={() => setNotifyEmailInput(email)}\n                  >\n                    {email}\n                  </div>\n                ))}\n              </div>\n            )}\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"0.75rem\" }}>\n              <button\n                style={cancelButtonStyle}\n                onClick={() => {\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                style={buttonStyle}\n                onClick={async () => {\n                  const toList = notifyEmailInput.split(\",\").map(e => e.trim()).filter(Boolean);\n                  if (!toList.length) return;\n                  const asset_url = `${window.location.origin}/review/${videoId}`;\n                  const username = localStorage.getItem(\"username\");\n                  await axios.post(`${BACKEND_URL}/notify_comment`, {\n                    video_id: videoId,\n                    page: notifyTargetComment.page,\n                    comment_text: notifyTargetComment.comment,\n                    reviewer: username,\n                    to: toList,\n                    asset_url\n                  });\n                  setToastMessage(\"✅ Comment notification sent.\");\n                  setTimeout(() => setToastMessage(\"\"), 4000);\n                  setIsNotifyModalOpen(false);\n                  setNotifyEmailInput(\"\");\n                  setNotifyTargetComment(null);\n                }}\n              >\n                Send\n              </button>\n            </div>\n          </div>\n        )}\n        {/* Toast message */}\n        {toastMessage && (\n          <div style={{\n            position: \"fixed\",\n            bottom: \"1rem\",\n            right: \"1rem\",\n            backgroundColor: \"#333\",\n            color: \"#fff\",\n            padding: \"0.75rem 1rem\",\n            borderRadius: \"6px\",\n            boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n            zIndex: 9999\n          }}>\n            {toastMessage}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CommentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}