{"ast":null,"code":"var _jsxFileName = \"/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/DocumentViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentViewer = ({\n  url\n}) => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const extension = url.split(\".\").pop().toLowerCase();\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(\"Failed to load document\");\n        const text = await res.text();\n        setContent(text);\n      } catch (err) {\n        setContent(\"‚ö†Ô∏è Failed to load document.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (extension !== \"docx\") {\n      fetchContent();\n    } else {\n      setLoading(false);\n    }\n  }, [url, extension]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading document...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (extension === \"docx\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontStyle: \"italic\",\n        color: \"#666\"\n      },\n      children: \"\\uD83D\\uDCC4 DOCX preview not yet supported.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"6px\",\n      background: \"#f9f9f9\",\n      whiteSpace: \"pre-wrap\",\n      overflowY: \"auto\",\n      maxHeight: \"70vh\"\n    },\n    children: extension === \"html\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this) : content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentViewer, \"5lV1igzoCkOZmUpysq4EToXYm+w=\");\n_c = DocumentViewer;\nexport default DocumentViewer;\nvar _c;\n$RefreshReg$(_c, \"DocumentViewer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DocumentViewer","url","_s","content","setContent","loading","setLoading","extension","split","pop","toLowerCase","fetchContent","res","fetch","ok","Error","text","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontStyle","color","padding","border","borderRadius","background","whiteSpace","overflowY","maxHeight","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/paulminton/development/video-review/video_review_backend/video_review_frontend/src/components/DocumentViewer.js"],"sourcesContent":["\n\nimport React, { useEffect, useState } from \"react\";\n\nconst DocumentViewer = ({ url }) => {\n  const [content, setContent] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const extension = url.split(\".\").pop().toLowerCase();\n\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        const res = await fetch(url);\n        if (!res.ok) throw new Error(\"Failed to load document\");\n        const text = await res.text();\n        setContent(text);\n      } catch (err) {\n        setContent(\"‚ö†Ô∏è Failed to load document.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (extension !== \"docx\") {\n      fetchContent();\n    } else {\n      setLoading(false);\n    }\n  }, [url, extension]);\n\n  if (loading) return <div>Loading document...</div>;\n\n  if (extension === \"docx\") {\n    return (\n      <div style={{ fontStyle: \"italic\", color: \"#666\" }}>\n        üìÑ DOCX preview not yet supported.\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      padding: \"1rem\",\n      border: \"1px solid #ccc\",\n      borderRadius: \"6px\",\n      background: \"#f9f9f9\",\n      whiteSpace: \"pre-wrap\",\n      overflowY: \"auto\",\n      maxHeight: \"70vh\"\n    }}>\n      {extension === \"html\"\n        ? <div dangerouslySetInnerHTML={{ __html: content }} />\n        : content}\n    </div>\n  );\n};\n\nexport default DocumentViewer;"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMU,SAAS,GAAGN,GAAG,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAEpDd,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACZ,GAAG,CAAC;QAC5B,IAAI,CAACW,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QACvD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BZ,UAAU,CAACY,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZb,UAAU,CAAC,6BAA6B,CAAC;MAC3C,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIC,SAAS,KAAK,MAAM,EAAE;MACxBI,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,GAAG,EAAEM,SAAS,CAAC,CAAC;EAEpB,IAAIF,OAAO,EAAE,oBAAON,OAAA;IAAAmB,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,IAAIf,SAAS,KAAK,MAAM,EAAE;IACxB,oBACER,OAAA;MAAKwB,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAP,QAAA,EAAC;IAEpD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MACVG,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAE,SAAS;MACrBC,UAAU,EAAE,UAAU;MACtBC,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE;IACb,CAAE;IAAAd,QAAA,EACCX,SAAS,KAAK,MAAM,gBACjBR,OAAA;MAAKkC,uBAAuB,EAAE;QAAEC,MAAM,EAAE/B;MAAQ;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACrDnB;EAAO;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnDIF,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}